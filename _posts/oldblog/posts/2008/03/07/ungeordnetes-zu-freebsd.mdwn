[[!meta  title="Ungeordnetes zu FreeBSD"]]
[[!meta  guid="http://www.matthias-rampke.de/2008/03/07/ungeordnetes-zu-freebsd/"]]
[[!meta  date="2008-03-07 00:26:26"]]
[[!meta  author="Matthias Rampke"]]
Ich habe ein bisschen mit FreeBSD herumgespielt. Weil sich die Installation und was danach kommt ein bisschen anf&uuml;hlt wie Linux Ende der 90-er hier eine (nicht ganz so) kurze Zusammenfassung meiner Erfahrungen und was man dabei so beachten sollte.
<!--more-->

F&uuml;r die <del>Semesterferien</del>  vorlesungsfreie Zeit habe ich mir mal wieder meinen alten PC vom Dachboden geholt, um ein paar Betriebssysteme auszuprobieren. Der erste Schritt hat gleich viel Spa&szlig; gemacht: Windows XP plattmachen. Auf einer Zweitfestplatte lungerte dann sogar noch ein inaktives (d.h. nicht im Bootloader vermerktes), veraltetes, aber funktionsf&auml;higes <a href="http://www.ubuntu.com/">Ubuntu</a> rum, was f&uuml;r solche Experimente gar nicht verkehrt ist.

Auf die erste Festplatte kam dann auch gleich mal das aktuelle <a href="http://www.kubuntu.com/">Kubuntu</a>, erwartungsgem&auml;&szlig; ziemlich schmerzfrei.

Zweites Probiersystem wurde (haupts&auml;chlich wegen <a href="http://de.wikipedia.org/wiki/ZFS_(Dateisystem)">ZFS</a> <a href="http://www.sun.com/software/solaris/">Solaris</a>, das erstmal mit exorbitanten Speicherforderungen f&uuml;r den grafischen Installer schockte. Nach ein bisschen Probieren war aber dann die Kombination von Men&uuml;punkten gefunden, die den textbasierten Installer loslegen lie&szlig;. Damit war die Installation dann nicht weiter problematisch, wenn man Linux schon vor Ubuntu kannte.

Zuletzt kam <a href="http://www.freebsd.org/">FreeBSD</a> an die Reihe. Nachdem ich ein wenig mit Solaris hantiert hatte kam die Meldung von FreeBSD 7.0-RELEASE, das ich mir nat&uuml;rlich sofort besorgt habe. Die Installation ging dann auch relativ reibungs-, aber auch glanzlos vonstatten. Einen grafischen Installer gibt es nach wie vor nicht.

Die ausw&auml;hlbaren Software-"Distributionen" sind auch nicht ganz durchsichtig. Da es an Platz nicht mangelt habe ich sie einfach im Zweifel angew&auml;hlt; trotzdem ist die Auswahl nach der Installation nicht berauschend.

<h4>Partitionen und &Auml;hnliches</h4>

Zuvor ging es aber ans Partitionieren bzw. einweisen in die vorhandenen Partitionen. Genau wie Solaris verwendet FreeBSD <a href="http://de.wikipedia.org/wiki/Unix_File_System">UFS</a>. Beide teilen die ihnen zugewiesene Partition auch noch zus&auml;tzlich auf. Hier ist Vorsicht angebracht: Was in der Linux- und Windows-Welt <strong>Partitionen</strong> sind, sind bei FreeBSD <strong>Slices</strong>, die weitere Unterteilung dann sind Partitionen. Bei Solaris ist es genau umgekehrt: Partitionen sind das, was der normale Linuxer als solche kennt, die weitere Unterteilung sind Slices. Verwirrend, aber zumindest im FreeBSD-Installer deutlich erkl&auml;rt.

Festplatten-, Slice- und Partitionsdevices liegen unter <code>/dev</code> und haben das Muster (bei Standard-IDE-Festplatten) a{disknr}s{Slicenr.}{Partitionsbuchst.}. Dabei sind also die BSD-"Partitionen" durch Buchstaben gekennzeichnet, die Festplatten und Slices (aka. Partitionen im Linux-Sinne) nummeriert. Es erscheinen nur die tats&auml;chlich vorhandenen Devicedateien, d.h. mit <code>ls /dev/ad*</code> kann man sich schnell einen &Uuml;berblick verschaffen, was &uuml;berhaupt da ist. Etwas detaillierter geht das mit <code>fdisk</code> (ohne Parameter listet es den Inhalt der ersten Festplatte auf, ansonsten wie immer den Devicenamen anh&auml;ngen), das aber root-Rechte verlangt. Der Inhalt von Extended-Partitionen wird nicht automatisch angezeigt, hier ist eine Extra-Abfrage mit <code>fdisk /dev/ad0s4</code> (Dateiname nach Bedarf ersetzen) n&ouml;tig.

Der Installer kann die Partitionsaufteilung automatisch &uuml;bernehmen, es empfiehlt sich ihn genau das tun zu lassen und dann nicht mehr daran rumzufummeln. Es werden weite Teile des Systems in eine gro&szlig;e Partition gelegt, die in <code>/usr</code> eingeh&auml;ngt wird; in der "Haupt"-Partition verbleibt nur ein Rumpfsystem.

Nach der Installation waren die Bootloader von Linux (GRUB) und Solaris (GRUB, modifiziert) erst einmal ausgeknockt. Vorsichtshalber hatte ich aber den Linux-GRUB (der als zentraler Startpunkt dienen soll) nicht nur in den MBR, sondern auch in den Bootsektor der Linux-Partition geschrieben, so dass ich diese nur wieder als aktiv markieren musste. Um den FreeBSD-Bootloader nachzuladen steht in der Konfigurationsdatei <code>/boot/grub/menu.lst</code> des Linux-GRUB so etwas wie

<code>title FreeBSD
rootnoverify (hd0,1)
chainloader +1
boot
</code>

Achtung: GRUB beginnt die Festplatten- und Partitionsz&auml;hlung bei 0, d.h. obiges Beispiel l&auml;dt den Bootloader von der zweiten Partition auf der ersten Festplatte im System. In vielen Beispielen steht auch noch die Zeile <code>makeactive</code>. Das ist nicht zu empfehlen, da dadurch das Bootflag in der Partitionstabelle gesetzt und beim n&auml;chsten Mal gleich FreeBSD gestartet wird. Windows scheint das zu ben&ouml;tigen, BSD ist da wie auch Linux nicht w&auml;hlerisch.

<h4>Konfiguration</h4>

Einige rudiment&auml;re Konfigurationsoptionen bietet der FreeBSD-Installer w&auml;hrend und nach der Installation. Er kann auch als <code>sysinstall</code> nachtr&auml;glich aufgerufen werden. Die wichtigste Kofigurationsdatei ist <code>/etc/rc.config</code>, in der Parameter f&uuml;r die Daemons festgelegt werden, die beim Start anlaufen. Ein deutsches Tastaturlayout wird durch den Eintrag <code>keymap="german.iso"</code> eingestellt. Achtung: <code>sysinstall</code> h&auml;ngt neue <em>und modifizierte</em> Eintr&auml;ge einfach an das Ende der Datei an, wo sie die Wirkung davorstehender &uuml;berschreiben. Also nach unten schauen und ggf. nicht nur den ersten Eintrag bearbeiten!

Die sonstigen Konfigurationsdateien sind verteilt zwischen <code>/etc</code> und <code>/usr/local/etc</code>.

Wichtig f&uuml;r Linux-UmsteigerInnen ist dabei, dass normale Benutzer von Haus aus nicht einmal <code>su</code> benutzen d&uuml;rfen; daf&uuml;r m&uuml;ssen sie Mitglied der Gruppe <code>wheel</code> sein. Das l&auml;sst sich mit <code>pw mod group wheel -m {user}</code> erreichen. <code>sudo</code> ist von Haus aus nicht installiert, l&auml;sst sich aber mit <code>pkg_add -r sudo</code> nachholen (N&auml;heres zum Packagesystem s.u.).

<h4>Grafik</h4>

Zur Konfiguration des Grafiksystems gibt es einiges zu sagen. Zuallererst bietet es sich an, die Maus f&uuml;r die Konsole zu aktivieren. F&uuml;r eine USB-Maus muss in <code>/etc/rc.conf</code>:

<code>moused_enable="YES"
moused_flags=" "
moused_port="/dev/ums0"
moused_type="auto"
</code>

Das Ger&auml;t kann evtl. abweichen, l&auml;sst sich aber durch &Uuml;berfliegen von <code>dmesg | less</code> in der Regel finden. Wichtig: F&uuml;r USB-M&auml;use ist der Typ <em>immer</em> <code>auto</code>.

Jetzt aber wirklich zur Grafik: Zuallererst sollte mit <code>Xorg -configure</code> (als root) eine Ausgangskonfiguration <code>xorg.conf.new</code> erzeugt werden. Diese kann nun nach <code>/etc/X11/xorg.conf</code> verschoben und angepasst werden. Da die Maus nun schon vom Systemservice betrieben wird, gen&uuml;gen nun die Zeilen

<code>Section "InputDevice"
	Identifier  "Mouse0"
	Driver      "mouse"
	Option	    "Protocol" "auto"
	Option	    "Device" "/dev/sysmouse"
EndSection</code>

Kein <code>ZAxisMapping</code>, kein Protokollgefummel - alles schon erledigt, auch das Mausrad funktioniert. (um das rauszufinden, habe ich lange gebraucht!)

Die Tastatur muss aufs neue eingedeutscht werden; hier habe ich schamlos bei Ubuntu geklaut:

<code>Section "InputDevice"
        Identifier      "Keyboard0"
        Driver          "kbd"
        Option          "CoreKeyboard"
        Option          "XkbRules"      "xorg"
        Option          "XkbModel"      "pc105"
        Option          "XkbLayout"     "de"
EndSection</code>

Ich habe mich (vorerst) f&uuml;r Gnome als grafische Oberfl&auml;che entschieden; das wird (vorausgesetzt es wurde bei der Installation schon gew&auml;hlt) durch die Zeile <code>gnome_enable="yes"</code> in <code>rc.conf</code> umgesetzt. Sie f&uuml;hrt auch dazu, dass der grafische Login-Manager gdm und damit das ganze Grafiksystem beim Start geladen wird.

Das Grafiksystem sollte jetzt im Grunde funktionieren (ggf. noch <code>/usr/local/etc/rc.d/gdm restart</code>).

<h4>Paketverwaltung</h4>

Heutzutage bringt jedes anst&auml;ndige freie Betriebssystem von Haus aus eine Paketverwaltung mit. FreeBSD geht sogar noch weiter und besitzt gewisserma&szlig;en eineinhalb Paketverwaltungen: Neben <a href="http://de.wikipedia.org/wiki/Pkgsrc">pkgsrc</a> f&uuml;r Bin&auml;rpakete l&auml;sst sich bei der Installation ausw&auml;hlen, ob <a href="http://www.freebsd.org/de/ports/"><code>ports</code></a> installiert werden soll. <code>ports</code> ist eine gro&szlig;e Sammlung von Scripts und Makefiles, mit der sich Programme aus den Quellcodes &uuml;bersetzen und installieren lassen. Das Herunterladen erfolgt dabei automatisch! Die ganze Sammlung liegt unter <code>/usr/ports</code>. Im Ordner des jeweiligen Programmes kann dieses mit <code>make install clean</code> (u.U. mit root-Rechten) heruntergeladen, &uuml;bersetzt und installiert werden. Danach ist es im Paketsystem von <code>pkgsrc</code> integriert, die Deinstallation erfolgt dann &uuml;ber dieses.

Mit <code>pkgsrc</code> lassen sich viele Programme aber auch direkt aus bereits &uuml;bersetzten Paketen installieren. Falls das Programmpaket lokal vorliegt kann es mit <code>pkg_add {Datei}</code> installiert werden. mit <code>pkg_add -r {Programmname}</code> versucht <code>pkgsrc</code> es vom FreeBSD-Server zu ziehen und zu installieren.

N&auml;here Informationen zu beiden gibt es im <a href="http://www.freebsd.org/doc/de_DE.ISO8859-1/books/handbook/ports.html">FreeBSD-Handbuch, Kapitel 4</a>.

Zu <code>pkgsrc</code> scheint es kein grafisches Interface zu geben, aber zumindest k&ouml;nnen die Pakete unter <a href="http://www.pkgsrc.se/">pkgsrc.se</a> durchsucht werden.

<h4>Treiber</h4>

Zu Treibern gibt es wenig allgemeines zu sagen. Was nicht auf Anhieb funktioniert (bei mir war das nur der Sound) kann in den <a href="http://www.freebsd.org/releases/7.0R/hardware.html">Hardware Notes</a> gesucht werden. Dort steht es dann unter dem jeweiligen Treiber, der dazu installiert werden muss; hier helfen wieder <code>pkgsrc</code> und <code>ports</code>.

<h4>Was fehlt</h4>

Flash! Es gibt keinen Flash-Player f&uuml;r FreeBSD. Da FreeBSD 7 bin&auml;rkompatibel zu Linux ist, kann der Linux-Treiber theoretisch installiert werden, funktioniert aber auch nur in f&uuml;r Linux &uuml;bersetzten Browsern. M&ouml;glicherweise soll es dabei auch noch Stabilit&auml;tsprobleme geben. Ich werde das in den n&auml;chsten Tagen mal ausprobieren.

<h4>Fazit</h4>

FreeBSD h&auml;ngt den modernen Linux-Distributionen in Sachen Benutzerfreundlichkeit noch um einige Jahre hinterher. Wer aber Spa&szlig; an ein bisschen Bastelei hat bekommt ein rasend schnelles System, das nicht einmal der Durchschnittsgeek hat. ZFS (das ich aber erst unter Solaris ausprobiert habe, ds aber von FreeBSD unterst&uuml;tzt wird) ist ein Quantensprung in der Datei(system)verwaltung und ist hoffentlich auch bald unter Linux und (brauchbar) auf Mac OS X zu haben. Windowser werden wohl wie immer in die R&ouml;hre gucken&hellip;

[[!taglink  Allgemein]]
[[!taglink  computer]]
[[!taglink  system]]
